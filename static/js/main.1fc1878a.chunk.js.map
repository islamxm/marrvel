{"version":3,"sources":["components/appHeader/AppHeader.js","services/marvelService.js","resources/img/mjolnir.png","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/errorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","resources/img/abyss.jpg","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/errorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","RandomChar","props","state","loading","error","ms","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","alt","Component","View","CharList","charList","newItemLoad","charEnd","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","imgStyle","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundary","errorMes","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1fc1878a.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","class MarvelService{\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    _apiKey = 'apikey=1066ddf5cfceda6209bfc9a1bff1fc29';\n    _baseOffset = 210\n    \n    getResource = async (url) => {\n        let res = await fetch(url);\n        \n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\n        }\n        \n        return await res.json();\n    }\n    \n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\n        return res.data.results.map(this._transformCharacter);\n    }\n    \n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\n        return this._transformCharacter(res.data.results[0]);\n    }\n    \n    _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'No information',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[0].url,\n            comics: char.comics.items\n        }\n    }\n}\n\nexport default MarvelService;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}} src={img} />   \n    )\n}\n\n\nexport default ErrorMessage;","import {Component} from 'react';\n\nimport MarvelService from '../../services/marvelService';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n    }\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    \n    ms = new MarvelService();\n    \n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000);\n    }\n    \n    // componentWillUnmount() {\n    //     clearInterval(this.timerId);\n    // }\n    \n    \n    \n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,         \n        })\n    }\n    \n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    \n    \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    \n    updateChar = () => {\n        let id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.ms\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError);\n        \n    }\n\n    \n    render() {\n        const {char, loading, error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n        \n        \n        \n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    \n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import {Component} from 'react';\nimport './charList.scss';\nimport abyss from '../../resources/img/abyss.jpg';\nimport MarvelService from '../../services/marvelService';\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\n\n\nclass CharList extends Component {\n\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoad: false,\n        offset: 210,\n        charEnd: false\n    }\n    \n    ms = new MarvelService();\n    \n    componentDidMount() {\n        this.onRequest();\n    }\n    \n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.ms.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError);\n    }\n    \n    onCharListLoading = () => {\n        this.setState({\n            newItemLoad: true\n        })\n    }\n    \n    onCharListLoaded = (newCharList) => {\n        \n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true\n        }\n        \n        \n        \n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoad:false,\n            offset: offset + 9,\n            charEnd: ended\n        }))\n    }\n    \n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    \n    renderItems(arr) {\n        const items =  arr.map((item) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n    \n    render() {\n\n        const {charList, loading, error, offset, newItemLoad, charEnd} = this.state;\n        \n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null;\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    disabled = {newItemLoad}\n                    style = {{'display' : charEnd ? 'none' : 'block'}}\n                    onClick = {() => this.onRequest(offset)} \n                    className=\"button button__main button__long\">\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList;","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import {Component, Fragment} from 'react';\nimport './charInfo.scss';\n\nimport MarvelService from '../../services/marvelService';\n\n\nimport Spinner from '../spinner/spinner';\nimport ErrorMessage from '../errorMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton';\n\nclass CharInfo extends Component {\n    \n    state = {\n        char: null,\n        loading: false,\n        error: false\n    }\n    \n    ms = new MarvelService();\n    \n    componentDidMount() {\n        this.updateChar();\n    }\n    \n    componentDidUpdate(prevProps) {\n        if(this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n    \n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n        this.onCharLoading();\n        this.ms\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    \n    onCharLoaded = (char) => {\n        this.setState({\n            char,\n            loading: false,         \n        })\n    }\n    \n    \n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    \n    \n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    \n    \n    \n    \n    render() {\n        const {char, loading, error} = this.state;\n        \n        const skeleton = char || loading || error ? null : <Skeleton/>\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    \n    const {name, description, thumbnail, homepage, wiki, comics} = char;\n    \n    \n    // console.log(comics);\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n            \n                {\n                    comics.length > 0 ? null : 'There is no comics with this character'\n                }\n                \n                {\n                    comics.map((item, i) => {\n                        if (i > 9) return;\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n               \n            </ul>\n        </>\n    )   \n}\n\nexport default CharInfo;","import {Component} from 'react';\n\n\nclass ErrorBoundary extends Component {\n    state = {\n        error: null\n    }\n    \n    componentDidCatch(error, errorMes) {\n        console.log(error, errorMes);\n        \n        this.setState({\n            error: true\n        })\n    }\n    \n    render() {\n        if(this.state.error) {\n            return <h2>Something went wrong</h2>\n        }\n        \n        return this.props.children;\n    }\n}\n\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React, {Component} from 'react';\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\n\n\nimport decoration from '../../resources/img/vision.png';\n\n\n\n\nclass App extends Component {\n    \n    state = {\n        selectedChar: null\n    }\n    \n    \n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n    \n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected = {this.onCharSelected}/>\n                        <ErrorBoundary>\n                            <CharInfo charId = {this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}